{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/parmeetbirwal/Documents/Vs-Code/Zenmonk-Training/Day%2011/social-media/src/redux/user/currentUser.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { authorizedInterface } from \"@/interfaces/user/user\";\n\nconst initialState: authorizedInterface = {\n    email: \"\",\n    token: \"\",\n    photoURL: \"\",\n    displayName: \"\",\n    phoneNumber: \"\",\n    uid: \"\",\n};\n\nconst logInUserSlice = createSlice({\n    name: \"currentUser\",\n    initialState,\n    reducers: {\n        addCredentials: (state, action: PayloadAction<authorizedInterface>) => {\n            state = {\n                email: action.payload.email,\n                token: action.payload.token,\n                photoURL: action.payload.photoURL,\n                displayName: action.payload.displayName,\n                phoneNumber: action.payload.phoneNumber,\n                uid: action.payload.uid,\n            }\n            return state;\n        },\n        addPostsCount: (state, action: PayloadAction<{ totalPosts: number }>) => {\n            state = { ...state, totalPosts: action.payload.totalPosts };\n            return state;\n        },\n        logout: (state) => state = initialState\n    }\n});\n\nexport default logInUserSlice.reducer;\nexport const { addCredentials, logout, addPostsCount } = logInUserSlice.actions;"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAIA,MAAM,eAAoC;IACtC,OAAO;IACP,OAAO;IACP,UAAU;IACV,aAAa;IACb,aAAa;IACb,KAAK;AACT;AAEA,MAAM,iBAAiB,IAAA,6MAAW,EAAC;IAC/B,MAAM;IACN;IACA,UAAU;QACN,gBAAgB,CAAC,OAAO;YACpB,QAAQ;gBACJ,OAAO,OAAO,OAAO,CAAC,KAAK;gBAC3B,OAAO,OAAO,OAAO,CAAC,KAAK;gBAC3B,UAAU,OAAO,OAAO,CAAC,QAAQ;gBACjC,aAAa,OAAO,OAAO,CAAC,WAAW;gBACvC,aAAa,OAAO,OAAO,CAAC,WAAW;gBACvC,KAAK,OAAO,OAAO,CAAC,GAAG;YAC3B;YACA,OAAO;QACX;QACA,eAAe,CAAC,OAAO;YACnB,QAAQ;gBAAE,GAAG,KAAK;gBAAE,YAAY,OAAO,OAAO,CAAC,UAAU;YAAC;YAC1D,OAAO;QACX;QACA,QAAQ,CAAC,QAAU,QAAQ;IAC/B;AACJ;uCAEe,eAAe,OAAO;AAC9B,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,eAAe,OAAO","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/parmeetbirwal/Documents/Vs-Code/Zenmonk-Training/Day%2011/social-media/src/redux/post/user-post.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { postDbGetInterface } from \"@/interfaces/post/user\";\n\nconst initialState: postDbGetInterface[] = [];\n\nconst postSlice = createSlice({\n    name: \"currentUserPost\",\n    initialState,\n    reducers: {\n        addUserPosts: (state, action: PayloadAction<postDbGetInterface>) => {\n            const isPresent = state.find((each) => each.postId === action.payload.postId);\n            if (!isPresent) {\n                state.push(action.payload);\n            }\n            return state;\n        },\n        removeUserPost: (state, action: PayloadAction<{ postId: string }>) => {\n            state = state.filter((each) => each.postId != action.payload.postId);\n            return state;\n        }\n    }\n});\n\nexport default postSlice.reducer;\nexport const { addUserPosts, removeUserPost } = postSlice.actions;"],"names":[],"mappings":";;;;;;;;AAAA;;AAIA,MAAM,eAAqC,EAAE;AAE7C,MAAM,YAAY,IAAA,6MAAW,EAAC;IAC1B,MAAM;IACN;IACA,UAAU;QACN,cAAc,CAAC,OAAO;YAClB,MAAM,YAAY,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,MAAM,KAAK,OAAO,OAAO,CAAC,MAAM;YAC5E,IAAI,CAAC,WAAW;gBACZ,MAAM,IAAI,CAAC,OAAO,OAAO;YAC7B;YACA,OAAO;QACX;QACA,gBAAgB,CAAC,OAAO;YACpB,QAAQ,MAAM,MAAM,CAAC,CAAC,OAAS,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,MAAM;YACnE,OAAO;QACX;IACJ;AACJ;uCAEe,UAAU,OAAO;AACzB,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/parmeetbirwal/Documents/Vs-Code/Zenmonk-Training/Day%2011/social-media/src/redux/store.ts"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport storage from 'redux-persist/es/storage';\nimport persistStore from \"redux-persist/es/persistStore\";\nimport persistReducer from \"redux-persist/lib/persistReducer\";\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport currentUserReducer from '@/redux/user/currentUser';\nimport currentUserPostReducer from \"@/redux/post/user-post\";\nimport usersReducer from '@/redux/user/users';\nimport activityReducer from '@/redux/activity-log/activity';\n\nconst rootReducer = combineReducers({\n    currentUser: currentUserReducer,\n    posts: currentUserPostReducer,\n});\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n});\n\nconst persister = persistStore(store);\n\nexport { store, persister, rootReducer };\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;AAIA,MAAM,cAAc,IAAA,6JAAe,EAAC;IAChC,aAAa,iJAAkB;IAC/B,OAAO,kJAAsB;AACjC;AAEA,MAAM,gBAAgB;IAClB,KAAK;IACL,SAAA,wKAAO;AACX;AAEA,MAAM,mBAAmB,IAAA,uKAAc,EAAC,eAAe;AAEvD,MAAM,QAAQ,IAAA,gNAAc,EAAC;IACzB,SAAS;IACT,YAAY,CAAC,uBAAyB,qBAAqB;YACvD,mBAAmB;gBACf,gBAAgB;oBAAC,+JAAK;oBAAE,mKAAS;oBAAE,+JAAK;oBAAE,iKAAO;oBAAE,+JAAK;oBAAE,kKAAQ;iBAAC;YACvE;QACJ;AACJ;AAEA,MAAM,YAAY,IAAA,oKAAY,EAAC","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///home/parmeetbirwal/Documents/Vs-Code/Zenmonk-Training/Day%2011/social-media/src/theme/index.ts"],"sourcesContent":["import { colors, createTheme } from \"@mui/material\";\n\nconst theme = createTheme({\n    components: {\n        MuiButton: {\n            styleOverrides: {\n                root: {\n                    fontSize: \"1rem\",\n                    background: \"#fff\",\n                    border:\"1px solid #757575\",\n                    color: \"#1976d2\",\n                    padding: \"2% 0 2% 0\",\n                    margin: \"1% 0 1% 0\",\n                    '&:hover': {\n                        backgroundColor: '#1976d2',\n                        color: \"white\"\n                    },\n                },\n                \n            }\n        },\n        MuiTypography: {\n            styleOverrides: {\n                root: {\n                    fontWeight:\"bolder\",\n                    fontSize: \"2rem\"\n                }\n            }\n        }\n    }\n});\n\nexport default theme;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,QAAQ,IAAA,6NAAW,EAAC;IACtB,YAAY;QACR,WAAW;YACP,gBAAgB;gBACZ,MAAM;oBACF,UAAU;oBACV,YAAY;oBACZ,QAAO;oBACP,OAAO;oBACP,SAAS;oBACT,QAAQ;oBACR,WAAW;wBACP,iBAAiB;wBACjB,OAAO;oBACX;gBACJ;YAEJ;QACJ;QACA,eAAe;YACX,gBAAgB;gBACZ,MAAM;oBACF,YAAW;oBACX,UAAU;gBACd;YACJ;QACJ;IACJ;AACJ;uCAEe","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///home/parmeetbirwal/Documents/Vs-Code/Zenmonk-Training/Day%2011/social-media/src/app/layout.tsx"],"sourcesContent":["\"use client\"\nimport type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persister, store } from \"@/redux/store\";\nimport { SnackbarProvider } from \"notistack\";\nimport { ThemeProvider } from \"@mui/material\";\nimport theme from \"@/theme\";\n\n// const geistSans = Geist({\n//   variable: \"--font-geist-sans\",\n//   subsets: [\"latin\"],\n// });\n\n// const geistMono = Geist_Mono({\n//   variable: \"--font-geist-mono\",\n//   subsets: [\"latin\"],\n// });\n\n// export const metadata: Metadata = {\n//   title: \"Create Next App\",\n//   description: \"Generated by create next app\",\n// };\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <ThemeProvider theme={theme}>\n          <SnackbarProvider maxSnack={3} autoHideDuration={1500}>\n            <Provider store={store}>\n              <PersistGate loading={null} persistor={persister}>\n                {children}\n              </PersistGate>\n            </Provider>\n          </SnackbarProvider>\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;AA0Be,SAAS,WAAW,KAIjC;QAJiC,EACjC,QAAQ,EAGR,GAJiC;IAKjC,qBACE,6LAAC;QAAK,MAAK;kBACT,cAAA,6LAAC;sBACC,cAAA,6LAAC,mOAAa;gBAAC,OAAO,mIAAK;0BACzB,cAAA,6LAAC,oKAAgB;oBAAC,UAAU;oBAAG,kBAAkB;8BAC/C,cAAA,6LAAC,wKAAQ;wBAAC,OAAO,iIAAK;kCACpB,cAAA,6LAAC,gLAAW;4BAAC,SAAS;4BAAM,WAAW,qIAAS;sCAC7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB;KApBwB","debugId":null}}]
}